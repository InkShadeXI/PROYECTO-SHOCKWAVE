CREATE DATABASE REDSOCIAL;

USE REDSOCIAL;

CREATE TABLE USUARIO (
    ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_USUARIO VARCHAR(30) NOT NULL UNIQUE,
    CORREO_USUARIO VARCHAR(30) NOT NULL UNIQUE,
    CONTRASENA_USUARIO VARCHAR(100) NOT NULL,
    USUARIO_ADMIN BOOLEAN NOT NULL
);

CREATE TABLE AMISTAD (
    ID_USUARIO_1 INT,
    ID_USUARIO_2 INT,
    FOREIGN KEY (ID_USUARIO_1) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_USUARIO_2) REFERENCES USUARIO(ID_USUARIO),
    UNIQUE (ID_USUARIO_1, ID_USUARIO_2)
);

CREATE TABLE POST_USUARIO (
    ID_POST INT AUTO_INCREMENT PRIMARY KEY, -- EL ID DEL POST
    ID_USUARIO_POST INT NOT NULL, -- HACE REFERENCIA AL ID DEL USUARIO QUE CREÓ EL POST
    FOREIGN KEY (ID_USUARIO_POST) REFERENCES USUARIO(ID_USUARIO),
    TEXTO_POST VARCHAR(300) NOT NULL, -- EL TEXTO DEL POST
    EXISTE_FOTO BOOLEAN NOT NULL,
    TITULO_FOTO VARCHAR(30),
    NUM_LIKES INT,
    NUM_DISSLIKES INT,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- TOMA POR DEFECTO LA FECHA Y LA HORA ACTUAL DE LA CREACIÓN DEL POST
);

CREATE TABLE COMENTARIO (
    ID_COMENTARIO INT AUTO_INCREMENT PRIMARY KEY, -- EL ID DEL COMENTARIO
    ID_COMENTARIO_POST INT, -- HACE REFERENCIA AL ID DEL POST QUE SE COMENTA
    FOREIGN KEY (ID_COMENTARIO_POST) REFERENCES POST_USUARIO(ID_POST),
    ID_COMENTARIO_USUARIO INT, -- HACE REFERENCIA AL ID DEL USUARIO QUE COMENTA EN EL POST
    FOREIGN KEY (ID_COMENTARIO_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    TEXTO_COMENTARIO VARCHAR(300) -- EL TEXTO DEL COMENTARIO
);

CREATE TABLE CORREOS_BLOQUEADOS (
    ID_CORREO INT AUTO_INCREMENT PRIMARY KEY,
    CORREO_USUARIO VARCHAR(30) NOT NULL UNIQUE
);

-- Una regla para controlar que si el usuario decide meter una foto (EXISTE_FOTO = TRUE) compruebe que el campo de titulo_foto no sea nulo, pero de ser false, lo permita.
ALTER TABLE POST_USUARIO
ADD CONSTRAINT chk_foto_requiere_texto CHECK (EXISTE_FOTO = FALSE OR TITULO_FOTO IS NOT NULL);